cdsw@86dgvn2i711gh6wc:~$ python mistral_vllm.py 
/home/cdsw/.local/lib/python3.9/site-packages/langchain/__init__.py:29: UserWarning: Importing PromptTemplate from langchain root module is no longer supported. Please use langchain_core.prompts.PromptTemplate instead.
  warnings.warn(
WARNING 04-04 03:03:10 config.py:748] Casting torch.bfloat16 to torch.float16.
2024-04-04 03:03:10,761 INFO worker.py:1540 -- Connecting to existing Ray cluster at address: 10.129.8.234:6379...
2024-04-04 03:03:10,778 INFO worker.py:1715 -- Connected to Ray cluster. View the dashboard at 127.0.0.1:8100 
INFO 04-04 03:03:11 llm_engine.py:75] Initializing an LLM engine (v0.4.0) with config: model='mistralai/Mistral-7B-Instruct-v0.1', tokenizer='mistralai/Mistral-7B-Instruct-v0.1', tokenizer_mode=auto, revision=None, tokenizer_revision=None, trust_remote_code=True, dtype=torch.float16, max_seq_len=32768, download_dir=None, load_format=auto, tensor_parallel_size=4, disable_custom_all_reduce=True, quantization=None, enforce_eager=False, kv_cache_dtype=auto, device_config=cuda, seed=0)
INFO 04-04 03:03:41 selector.py:45] Cannot use FlashAttention because the package is not found. Please install it for better performance.
INFO 04-04 03:03:41 selector.py:21] Using XFormers backend.
(RayWorkerVllm pid=433, ip=10.128.8.137) INFO 04-04 03:03:41 selector.py:45] Cannot use FlashAttention because the package is not found. Please install it for better performance.
(RayWorkerVllm pid=433, ip=10.128.8.137) INFO 04-04 03:03:41 selector.py:21] Using XFormers backend.
(RayWorkerVllm pid=435, ip=10.129.8.254) INFO 04-04 03:03:42 pynccl_utils.py:45] vLLM is using nccl==2.18.1
INFO 04-04 03:03:43 pynccl_utils.py:45] vLLM is using nccl==2.18.1
(RayWorkerVllm pid=433, ip=10.129.10.184) INFO 04-04 03:03:46 weight_utils.py:177] Using model weights format ['*.safetensors']
(RayWorkerVllm pid=433, ip=10.129.10.184) INFO 04-04 03:03:41 selector.py:45] Cannot use FlashAttention because the package is not found. Please install it for better performance. [repeated 2x across cluster] (Ray deduplicates logs by default. Set RAY_DEDUP_LOGS=0 to disable log deduplication, or see https://docs.ray.io/en/master/ray-observability/ray-logging.html#log-deduplication for more options.)
(RayWorkerVllm pid=433, ip=10.129.10.184) INFO 04-04 03:03:41 selector.py:21] Using XFormers backend. [repeated 2x across cluster]
INFO 04-04 03:03:47 weight_utils.py:177] Using model weights format ['*.safetensors']
INFO 04-04 03:03:53 model_runner.py:104] Loading model weights took 3.3804 GB
(RayWorkerVllm pid=435, ip=10.129.8.254) INFO 04-04 03:03:57 model_runner.py:104] Loading model weights took 3.3804 GB
(RayWorkerVllm pid=433, ip=10.129.10.184) INFO 04-04 03:03:43 pynccl_utils.py:45] vLLM is using nccl==2.18.1 [repeated 2x across cluster]
(RayWorkerVllm pid=435, ip=10.129.8.254) INFO 04-04 03:03:47 weight_utils.py:177] Using model weights format ['*.safetensors'] [repeated 2x across cluster]
(RayWorkerVllm pid=433, ip=10.128.8.137) INFO 04-04 03:04:16 model_runner.py:104] Loading model weights took 3.3804 GB
(RayWorkerVllm pid=433, ip=10.129.10.184) INFO 04-04 03:04:18 model_runner.py:104] Loading model weights took 3.3804 GB
INFO 04-04 03:04:50 ray_gpu_executor.py:240] # GPU blocks: 24922, # CPU blocks: 8192
INFO 04-04 03:04:53 model_runner.py:791] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
INFO 04-04 03:04:53 model_runner.py:795] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
(RayWorkerVllm pid=433, ip=10.129.10.184) INFO 04-04 03:04:53 model_runner.py:791] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
(RayWorkerVllm pid=433, ip=10.129.10.184) INFO 04-04 03:04:53 model_runner.py:795] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
(RayWorkerVllm pid=433, ip=10.129.10.184) INFO 04-04 03:05:05 model_runner.py:867] Graph capturing finished in 11 secs.
(RayWorkerVllm pid=433, ip=10.128.8.137) INFO 04-04 03:04:53 model_runner.py:791] Capturing the model for CUDA graphs. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI. [repeated 2x across cluster]
(RayWorkerVllm pid=433, ip=10.128.8.137) INFO 04-04 03:04:53 model_runner.py:795] CUDA graphs can take additional 1~3 GiB memory per GPU. If you are running out of memory, consider decreasing `gpu_memory_utilization` or enforcing eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage. [repeated 2x across cluster]
INFO 04-04 03:05:05 model_runner.py:867] Graph capturing finished in 11 secs.
ask me someting: (exit type :q)when is the next olympiad
Processed prompts: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:05<00:00,  5.71s/it]
QUESTION: when is the next olympiad
ANSWER: 
The next Olympic Games will take place in Paris, France in 2024. The Summer Olympics will be held from July 26th to August 12th, and the Winter Olympics will be held from February 6th to 20th, 2024.

Function call_llm(['when is the next olympiad'],) {'user_id': 'default'} Took 5.7330 seconds
ask me someting: (exit type :q)when were you born?
Processed prompts: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:02<00:00,  2.10s/it]
QUESTION: when were you born?
ANSWER: I was born on Friday, September 24th, 2021.

Function call_llm(['when were you born?'],) {'user_id': 'default'} Took 2.1110 seconds
ask me someting: (exit type :q):)
Processed prompts: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:02<00:00,  2.10s/it]
QUESTION: :)
ANSWER: I'm glad you're happy! Is there anything else I can help you with?

Function call_llm([':)'],) {'user_id': 'default'} Took 2.1136 seconds
ask me someting: (exit type :q)who is Stephan?
Processed prompts: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:02<00:00,  2.67s/it]
QUESTION: who is Stephan?
ANSWER: I'm not sure who you're asking about. Could you please provide more context or clarify your question?

Function call_llm(['who is Stephan?'],) {'user_id': 'default'} Took 2.6807 seconds
ask me someting: (exit type :q)when did the ucraine war started
Processed prompts: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:10<00:00, 10.12s/it]
QUESTION: when did the ucraine war started
ANSWER: The conflict in eastern Ukraine, also known as the Donbas conflict, began in 2014. It started as a political crisis in Ukraine, with protests against the government and the ousting of President Viktor Yanukovych. The conflict escalated into a military conflict between Ukrainian government forces and pro-Russian separatists in the Donetsk and Luhansk regions of Ukraine. The conflict has continued to this day, with ongoing fighting and political tensions in the region.

Function call_llm(['when did the ucraine war started'],) {'user_id': 'default'} Took 10.1292 seconds
ask me someting: (exit type :q)are you sad?
Processed prompts: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:04<00:00,  4.33s/it]
QUESTION: are you sad?
ANSWER: I am an artificial intelligence and do not have emotions. I am designed to provide information and assistance to the best of my ability. Is there anything else I can help you with?

Function call_llm(['are you sad?'],) {'user_id': 'default'} Took 4.3386 seconds
ask me someting: (exit type :q)what is an iceberg table?
Processed prompts: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:10<00:00, 10.50s/it]
QUESTION: what is an iceberg table?
ANSWER: An iceberg table is a type of table that is made of ice. It is often used for outdoor events, such as picnics or barbecues, as a way to keep food and drinks cold. Iceberg tables are typically made of large blocks of ice that are cut and shaped into tables, and can be used for a variety of purposes, including as a serving table, a picnic table, or a barbecue grill. They are often used in warmer climates where traditional tables and chairs are not suitable for outdoor use.

Function call_llm(['what is an iceberg table?'],) {'user_id': 'default'} Took 10.5100 seconds
ask me someting: (exit type :q)history
Processed prompts: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:11<00:00, 11.46s/it]
QUESTION: history
ANSWER: The history of the world is a vast and complex subject, encompassing countless events, cultures, and civilizations. It is difficult to provide a brief overview of the entire history of the world in a single answer, but I can give you a general idea of some of the major events and periods in human history.

* Prehistory: The period before recorded history, which is estimated to have lasted from around 10,000 BCE to around 5,000 BCE. During this time, early human societies developed and evolved, and the first recorded civilizations, such as the Sumerians

Function call_llm(['history'],) {'user_id': 'default'} Took 11.4682 seconds
ask me someting: (exit type :q):q
(RayWorkerVllm pid=435, ip=10.129.8.254) INFO 04-04 03:05:05 model_runner.py:867] Graph capturing finished in 11 secs. [repeated 2x across cluster]
pip list cdsw@86dgvn2i711gh6wc:~$ pip list 
WARNING: Ignoring invalid distribution -vidia-nvjitlink-cu12 (/home/cdsw/.local/lib/python3.9/site-packages)
Package                      Version
---------------------------- ------------
absl-py                      2.1.0
accelerate                   0.28.0
aiofiles                     22.1.0
aiohttp                      3.9.3
aiohttp-cors                 0.7.0
aiosignal                    1.3.1
aiosqlite                    0.19.0
annotated-types              0.6.0
anyio                        4.3.0
argcomplete                  2.0.0
argon2-cffi                  20.1.0
arrow                        1.2.3
asttokens                    2.2.1
astunparse                   1.6.3
async-generator              1.10
async-timeout                4.0.3
attrs                        23.1.0
Babel                        2.12.1
backcall                     0.2.0
beautifulsoup4               4.11.1
bitarray                     2.6.0
bitsandbytes                 0.43.0
bleach                       3.3.1
blessed                      1.20.0
cachetools                   5.3.3
cattrs                       22.2.0
cdsw                         1.1.0
certifi                      2023.7.22
cffi                         1.14.4
charset-normalizer           3.1.0
click                        8.1.3
cloudpickle                  2.2.1
cmake                        3.29.0.1
cml                          1.0.0
cmlapi                       23.10.28
cmlextensions                0.1
colorama                     0.4.6
colorful                     0.5.6
comm                         0.1.3
contourpy                    1.0.7
cycler                       0.11.0
databricks-cli               0.17.4
dataclasses-json             0.6.4
debugpy                      1.6.7
decorator                    4.4.2
defusedxml                   0.6.0
diskcache                    5.6.3
distlib                      0.3.8
dnspython                    2.6.1
docstring-to-markdown        0.12
email_validator              2.1.1
entrypoints                  0.4
exceptiongroup               1.1.1
executing                    1.2.0
fastapi                      0.110.1
fastjsonschema               2.15.3
filelock                     3.13.3
flatbuffers                  24.3.25
fonttools                    4.39.3
fqdn                         1.5.1
frozenlist                   1.4.1
fsspec                       2024.3.1
gast                         0.5.4
gitdb                        4.0.10
GitPython                    3.1.32
google-api-core              2.18.0
google-auth                  2.29.0
google-auth-oauthlib         1.2.0
google-pasta                 0.2.0
googleapis-common-protos     1.63.0
gpustat                      1.1.1
greenlet                     3.0.3
grpcio                       1.62.1
h11                          0.14.0
h5py                         3.10.0
httptools                    0.6.1
huggingface-hub              0.22.2
idna                         2.10
importlib-metadata           4.11.3
importlib-resources          5.12.0
impyla                       0.18.0
interegular                  0.3.3
ipykernel                    6.22.0
ipython                      8.10.0
ipython-genutils             0.2.0
ipywidgets                   8.1.2
isoduration                  20.11.0
jedi                         0.18.2
jedi-language-server         0.40.0
Jinja2                       3.1.1
joblib                       1.3.2
json5                        0.9.5
jsonpatch                    1.33
jsonpointer                  2.3
jsonschema                   4.17.3
jupyter-client               7.2.2
jupyter_core                 5.3.0
jupyter-events               0.6.3
jupyter-lsp                  2.1.0
jupyter-server               1.24.0
jupyter_server_fileid        0.9.0
jupyter-server-mathjax       0.2.6
jupyter_server_ydoc          0.6.1
jupyter-ydoc                 0.2.4
jupyterlab                   3.6.0
jupyterlab-git               0.41.0
jupyterlab-lsp               4.1.0
jupyterlab-pygments          0.1.2
jupyterlab_server            2.22.1
jupyterlab_widgets           3.0.10
keras                        2.15.0
kerberos                     1.3.1
kiwisolver                   1.4.4
langchain                    0.1.14
langchain-community          0.0.31
langchain-core               0.1.40
langchain-text-splitters     0.0.1
langsmith                    0.1.39
lark                         1.1.9
libclang                     18.1.1
llvmlite                     0.42.0
logger                       1.4
lsprotocol                   2023.0.0a1
Markdown                     3.6
markdown-it-py               3.0.0
MarkupSafe                   2.1.1
marshmallow                  3.21.1
matplotlib                   3.7.0
matplotlib-inline            0.1.3
mdurl                        0.1.2
mistune                      2.0.5
ml-dtypes                    0.2.0
mlflow-CML-plugin            0.0.1
mlflow-skinny                2.4.1
mpmath                       1.3.0
msgpack                      1.0.8
multidict                    6.0.5
mypy-extensions              1.0.0
namex                        0.0.7
nbclassic                    1.0.0
nbclient                     0.5.1
nbconvert                    7.4.0
nbdime                       3.2.0
nbformat                     5.3.0
nest-asyncio                 1.5.5
networkx                     3.2.1
ninja                        1.11.1.1
notebook                     6.5.4
notebook_shim                0.2.3
numba                        0.59.1
numpy                        1.26.4
nvidia-cublas-cu12           12.1.3.1
nvidia-cuda-cupti-cu12       12.1.105
nvidia-cuda-nvcc-cu12        12.3.107
nvidia-cuda-nvrtc-cu12       12.1.105
nvidia-cuda-runtime-cu12     12.1.105
nvidia-cudnn-cu12            8.9.2.26
nvidia-cufft-cu12            11.0.2.54
nvidia-curand-cu12           10.3.2.106
nvidia-cusolver-cu12         11.4.5.107
nvidia-cusparse-cu12         12.1.0.106
nvidia-ml-py                 12.535.133
nvidia-nccl-cu12             2.18.1
nvidia-nvjitlink-cu12        12.3.101
nvidia-nvtx-cu12             12.1.105
oauthlib                     3.2.2
opencensus                   0.11.4
opencensus-context           0.1.3
opt-einsum                   3.3.0
optree                       0.11.0
orjson                       3.10.0
outlines                     0.0.34
packaging                    23.2
pandocfilters                1.4.3
parso                        0.8.3
pexpect                      4.8.0
pickleshare                  0.7.5
Pillow                       9.3.0
pip                          23.2.1
platformdirs                 4.2.0
prometheus_client            0.20.0
prompt-toolkit               3.0.38
proto-plus                   1.23.0
protobuf                     4.25.3
psutil                       5.9.5
ptyprocess                   0.6.0
pure-eval                    0.2.2
pure-sasl                    0.6.2
py-cpuinfo                   9.0.0
py-spy                       0.3.14
py4j                         0.10.9.1
pyasn1                       0.6.0
pyasn1_modules               0.4.0
pycparser                    2.20
pydantic                     2.6.1
pydantic_core                2.16.2
pydantic-settings            2.1.0
pygls                        1.0.1
Pygments                     2.15.1
PyJWT                        2.6.0
pynvml                       11.5.0
pyparsing                    3.0.9
pyrsistent                   0.17.3
python-dateutil              2.8.2
python-dotenv                1.0.1
python-json-logger           2.0.7
pytz                         2022.7.1
PyYAML                       6.0
pyzmq                        22.3.0
ray                          2.9.2
referencing                  0.34.0
regex                        2023.12.25
requests                     2.31.0
requests-oauthlib            2.0.0
rfc3339-validator            0.1.4
rfc3986-validator            0.1.1
rich                         13.7.1
rpds-py                      0.18.0
rsa                          4.9
safetensors                  0.4.2
scikit-learn                 1.4.1.post1
scipy                        1.13.0
Send2Trash                   1.8.0
sentence-transformers        2.4.0
sentencepiece                0.2.0
setuptools                   58.1.0
six                          1.16.0
smart-open                   7.0.4
smmap                        5.0.0
sniffio                      1.2.0
soupsieve                    2.3.2
SQLAlchemy                   2.0.29
sqlparse                     0.4.3
stack-data                   0.6.2
starlette                    0.37.2
sympy                        1.12
tabulate                     0.9.0
tenacity                     8.2.3
tensorboard                  2.15.2
tensorboard-data-server      0.7.2
tensorflow                   2.15.0
tensorflow-estimator         2.15.0
tensorflow-io-gcs-filesystem 0.36.0
termcolor                    2.4.0
terminado                    0.9.2
threadpoolctl                3.4.0
thrift                       0.16.0
thrift-sasl                  0.4.3
tiktoken                     0.6.0
tinycss2                     1.1.1
tokenizers                   0.15.2
tomli                        2.0.1
torch                        2.1.2
tornado                      6.3.2
tqdm                         4.66.2
traitlets                    5.9.0
transformers                 4.39.3
triton                       2.1.0
typeguard                    2.13.3
typing_extensions            4.10.0
typing-inspect               0.9.0
uri-template                 1.2.0
urllib3                      1.26.6
uvicorn                      0.29.0
uvloop                       0.19.0
virtualenv                   20.25.1
vllm                         0.4.0
watchfiles                   0.21.0
wcwidth                      0.2.5
webcolors                    1.13
webencodings                 0.5.1
websocket-client             1.2.1
websockets                   12.0
Werkzeug                     3.0.2
wheel                        0.41.2
widgetsnbextension           4.0.10
wrapt                        1.14.1
xformers                     0.0.23.post1
y-py                         0.5.9
yarl                         1.9.4
ypy-websocket                0.8.2
zipp                         3.15.0
cdsw@86dgvn2i711gh6wc:~$ 






!pip install tensorflow[and-cuda]